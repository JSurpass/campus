<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">


	<!-- 通过annotation-driven可以替代下边的处理器映射器和适配器 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />

	<!-- DispatcherServlet上下文，使用spring组件扫描（注：在springmvc中只配置扫描带@Controller的类）
		扫描的时候spring-mvc和application分开扫描加载-->
	<context:component-scan base-package="com.campus.web">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 不拦截静态资源-->
	<mvc:default-servlet-handler/>

	<!-- 静态资源访问（不拦截此目录下的东西的访问） -->
	<mvc:resources location="/pages/"  mapping="/pages/**" />
	<mvc:resources location="/static/"  mapping="/static/**" />

	<!-- 定义跳转的文件的前后缀，视图模式配置-->
	<bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>